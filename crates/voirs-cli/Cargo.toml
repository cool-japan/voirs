[package]
name = "voirs-cli"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation = "https://docs.rs/voirs-cli"
keywords = ["voirs", "cli", "tts", "command-line", "speech"]
categories = ["command-line-utilities", "multimedia::audio"]
rust-version.workspace = true
description = "Command-line interface for VoiRS speech synthesis"

[[bin]]
name = "voirs"
path = "src/main.rs"

[dependencies]
# Core VoiRS crates
voirs-sdk.workspace = true
voirs-g2p.workspace = true
voirs-acoustic.workspace = true
voirs-evaluation.workspace = true
voirs-vocoder.workspace = true
voirs-dataset.workspace = true
voirs-emotion = { workspace = true, optional = true }
voirs-cloning = { workspace = true, optional = true }
voirs-conversion = { workspace = true, optional = true }
voirs-singing = { workspace = true, optional = true }
voirs-spatial = { workspace = true, optional = true }

# CLI framework
clap.workspace = true
clap_complete.workspace = true

# Async support
async-trait.workspace = true

# Audio I/O
hound.workspace = true
cpal.workspace = true
dasp.workspace = true

# File handling and formats
serde.workspace = true
serde_json.workspace = true
toml.workspace = true

# Progress and user interaction
indicatif.workspace = true
console.workspace = true
dialoguer.workspace = true

# Async runtime
tokio.workspace = true

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# Logging
tracing.workspace = true
tracing-subscriber.workspace = true

# Additional utilities
chrono.workspace = true
regex.workspace = true
csv.workspace = true
tempfile.workspace = true
num_cpus.workspace = true
dirs.workspace = true
fastrand.workspace = true
semver.workspace = true
flate2.workspace = true

# ML frameworks (for training)
candle-core.workspace = true
candle-nn.workspace = true

# Platform-specific utilities
[target.'cfg(unix)'.dependencies]
libc.workspace = true

# Serialization formats for config
serde_yaml.workspace = true
base64.workspace = true

# Model management
hf-hub.workspace = true
reqwest.workspace = true
sha2.workspace = true
futures-util.workspace = true
safetensors.workspace = true

# Cloud storage encryption
aes-gcm.workspace = true

# HTTP server
axum.workspace = true
tower.workspace = true
tower-http.workspace = true
hyper.workspace = true

# Plugin system
libloading.workspace = true
wasmtime.workspace = true

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.1"
tempfile = "3.23"

[features]
default = ["emotion", "cloning", "conversion", "singing", "spatial", "cloud"]
gpu = ["voirs-acoustic/gpu", "voirs-vocoder/gpu", "metal"]
metal = ["voirs-acoustic/metal", "voirs-vocoder/metal"]
cuda = ["voirs-acoustic/cuda", "voirs-vocoder/cuda"]
onnx = ["voirs-acoustic/onnx"]
emotion = ["dep:voirs-emotion"]
cloning = ["dep:voirs-cloning"]
conversion = ["dep:voirs-conversion"]
singing = ["dep:voirs-singing"]
spatial = ["dep:voirs-spatial"]
cloud = []
[lints]
workspace = true
