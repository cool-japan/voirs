[package]
name = "voirs-evaluation"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation = "https://docs.rs/voirs-evaluation"
keywords = ["voirs", "evaluation", "quality", "metrics", "mos"]
categories = ["science", "multimedia::audio", "mathematics"]
rust-version.workspace = true
description = "Quality evaluation and assessment framework for VoiRS"

[dependencies]
# SciRS2 - Scientific computing abstractions
scirs2-core.workspace = true
scirs2-fft.workspace = true

# Core VoiRS dependencies
voirs-sdk.workspace = true
voirs-recognizer.workspace = true
voirs-g2p.workspace = true

# Async and traits
async-trait.workspace = true
tokio = { workspace = true, features = ["full"] }
tokio-stream.workspace = true
futures.workspace = true

# Audio processing
hound.workspace = true
dasp.workspace = true

# Audio format support
symphonia = { version = "0.5", features = ["all"] }
# Note: mp3-decoder is included in symphonia features
ogg = "0.9"
lewton = "0.10"

# Math and statistics
ordered-float.workspace = true
statrs = "0.18"

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
bincode.workspace = true

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# Logging
tracing.workspace = true

# Utilities
once_cell.workspace = true
parking_lot.workspace = true
chrono.workspace = true
flate2.workspace = true
uuid = { version = "1.18", features = ["v4", "serde"] }
base64 = "0.22"

# Machine learning
candle-core.workspace = true
candle-nn.workspace = true

# Text processing
unicode-normalization.workspace = true
regex.workspace = true

# Web and networking
# Enable necessary warp features after upgrade (websocket and server)
warp = { version = "0.4", features = ["websocket", "server"] }
futures-util = "0.3"
tokio-tungstenite = "0.28"

# Performance
crossbeam-utils.workspace = true
num_cpus.workspace = true
libc.workspace = true

# Python bindings (optional)
pyo3 = { workspace = true, features = ["extension-module"], optional = true }
numpy = { workspace = true, optional = true }

# Audio metrics
# Note: In a real implementation, you might add specialized audio quality libraries

[dev-dependencies]
tokio-test = "0.4"
tempfile.workspace = true
criterion.workspace = true
tracing-subscriber.workspace = true

[features]
default = ["quality", "pronunciation", "comparison"]
quality = []
pronunciation = []
comparison = []
perceptual = []
python = ["pyo3", "numpy"]
r-integration = []
all-metrics = ["quality", "pronunciation", "comparison", "perceptual"]

[[example]]
name = "perceptual_evaluation"
required-features = ["perceptual"]

[[example]]
name = "r_statistical_analysis"
required-features = ["r-integration"]

[[bench]]
name = "evaluation_metrics"
harness = false

[[bench]]
name = "memory_benchmark"
harness = false

[[bench]]
name = "gpu_acceleration"
harness = false

[[bench]]
name = "critical_success_factors"
harness = false

[[bench]]
name = "performance_standards"
harness = false
[lints]
workspace = true
